<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.telei.wms.datasource.wms.repository.GoodsRepository">
    <resultMap id="BaseResultMap" type="com.telei.wms.datasource.wms.model.Goods">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="customer_id" jdbcType="BIGINT" property="customerId"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,create_time,customer_id
    </sql>

    <insert id="insert">
        insert into goods (id,name,create_time,customer_id)
        values (#{id,jdbcType=BIGINT},#{name,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{customerId,jdbcType=BIGINT})
    </insert>

    <insert id="insertSelective">
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="customerId != null">
                customer_id
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="customerId != null">
                #{customerId,jdbcType=BIGINT}
            </if>
        </trim>
    </insert>

    <insert id="insertBatch">
        insert into goods (id,name,create_time,customer_id) values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.id,jdbcType=BIGINT},
            #{item.name,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.customerId,jdbcType=BIGINT}
            )
        </foreach>
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from goods
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByPrimaryKeys">
        delete from goods where id in
        <foreach close=")" collection="list" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </delete>

    <update id="updateByPrimaryKey">
        update goods
        <set>
            name = #{name,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            customer_id = #{customerId,jdbcType=BIGINT}
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKeySelective">
        update goods
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=BIGINT}
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateBatch">
        <foreach close="" collection="list" item="item" open="" separator=";">
            update goods
            <set>
                <if test="item.name != null">
                    name = #{item.name,jdbcType=VARCHAR},
                </if>
                <if test="item.createTime != null">
                    create_time = #{item.createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="item.customerId != null">
                    customer_id = #{item.customerId,jdbcType=BIGINT}
                </if>
            </set>
            where id = #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from goods
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByPrimaryKeyWithLock" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from goods
        where id = #{id,jdbcType=BIGINT} for update
    </select>

    <select id="selectByPrimaryKeys" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from goods where id in
        <foreach close=")" collection="list" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="selectByEntity" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods
        <where>
            <if test="id != null">
                and id=#{id,jdbcType=BIGINT}
            </if>
            <if test="name != null">
                and name=#{name,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null">
                and create_time=#{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="customerId != null">
                and customer_id=#{customerId,jdbcType=BIGINT}
            </if>
        </where>
    </select>

    <select id="selectByConditions" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods
        <where>
            <if test="id != null">
                and id ${id}
            </if>
            <if test="name != null">
                and name ${name}
            </if>
            <if test="createTime != null">
                and create_time ${createTime}
            </if>
            <if test="customerId != null">
                and customer_id ${customerId}
            </if>
        </where>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods
    </select>

    <select id="count" resultType="java.lang.Long">
        select count(*) from goods
    </select>

    <select id="selectByFunction">
        select ${function}(${column}) from goods
    </select>

</mapper>